================================================================================
To-do / bug fixes:
================================================================================
----------------------------------------
			Back-end
----------------------------------------

+ HTML invoices
+ Import of Greek a/b files
+ Auto-generate or manually generate invoices
+ Email invoices to clients on generation
+ Invoices report (Intrastat, VAT, free-form filter) & CSV export
+ Option to show/hide the steps bar
+ Option to disable business registrations
+ Option to disable collection of address information

----------------------------------------
			Front-end
----------------------------------------
# The automatic discount is not visible when you first load the page.
	We have to run the validation code when the page loads and use the pricing information
	from the validation results.
+ Clients can download their invoices anytime

----------------------------------------
Integrations
----------------------------------------
- Payment: Off-line
- Add/remove to Agora groups
- Add/remove to Kunena groups
- Payment: Authorize.net AIM http://developer.authorize.net/api/aim/
- Payment: Authorize.net SIM http://developer.authorize.net/api/sim/
- Payment: DIBS
- Community Builder integration
	o Automatically authorize paying customers
	o Create new CB users, if they don't already exist
	o Overwrite built-in and custom fields with {USERNAME}, {EMAIL}, {NAME}, {ADDRESS1}, {ADDRESS2}, {COUNTRY}, {STATE}, {CITY}, {BUSINESSSTATUS}, {BUSINESSNAME}, {OCCUPATION}, {VATNUMBER}, {VIESVALIDATION}, {LEVEL}, {EXPIRATION}, {DETAILSURL}, {SUMMARYURL} or custom data
- JomSocial integration (add to JS users/groups, update custom JS fields regarding subscription info)
	(like CB)

================================================================================
Future ideas:
================================================================================
- Customizable emails
- email class with multiple back-ends (PHP mail function, SMTP, sendmail, Amazon SES)
- Payment: Moneybookers http://www.moneybookers.com/app/help.pl?s=m_shoppingcart
- Payment: PayPal Pro
- Payment: Google Checkout http://code.google.com/intl/el-GR/apis/checkout/
- Add/remove to RokDownloads
- Add/remove to Jomres
- Add/remove to Mailchimp
- Add/remove subscriptions based on VM purchases
- Add/remove subscriptions based on Tienda purchases
- Payment: Eurobank (Greece)
- Payment: PayPal recurring subscriptions
- Payment: Amazon payments
- Payment: WorldPay
- Payment: 2checkout
- Payment: Avangate http://www.avangate.com/ecommerce/
- Payment: Liberty Reserve http://www.libertyreserve.com/en/help/xmlapiguide
- Payment: Moneris http://www.moneris.com/en/MerchantServices/MerchantDirect.aspx
- Payment: PSIGate http://www.psigate.com/pages/techsupport.asp
- Payment: Charge.com
- PLUGIN content/aksubscribe {aksubscribe SLUG|ID} => URL to subscription page of that level
- Affiliates. Links an affiliate to a coupon code and calculates the total commissions per term (e.g. per month)
- Resellers. A triangular sale: Reseller charges the user and uses our API to get a voucher (coupon) code. The user uses the coupon code on our site to subscribe. The reseller gets charged when the coupon is used.
- Linked subscriptions. User B "inherits" the subscriptions of User A. Every change in User A's subscription status is replicated to User B. One-to-many relationship to ease the transition.

================================================================================
On ice (probably never going to happen)
================================================================================
- Add/remove to RedShop groups (it's supposed to be free, but asks me to pay 29 Euros?! )
- Add/remove to SOBI2 (component handles its own payments; you can't do otherwise; need to ask Radek)
- Add/remove to SOBIPro (component handles its own payments; you can't do otherwise; need to ask Radek)